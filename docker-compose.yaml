version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: crawler
      POSTGRES_USER: crawler
      POSTGRES_PASSWORD: asdasd123
      PGDATA: /data/postgres
    command:
      - bash
      - -c
      - docker-entrypoint.sh -c config_file=/etc/postgresql/postgres.conf -c hba_file=/etc/postgresql/pg_hba.conf
    volumes:
       - ./postgres:/data/postgres
       - ./configs/postgresql:/etc/postgresql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - crawler

  redis:
    image: redis/redis-stack:6.2.6-v11
    container_name: redis
    environment:
      - "REDIS_ARGS=--requirepass asdasd123"
    ports:
      - 6379:6379
    networks:
      - crawler

  crawler:
    container_name: crawler-app
    build:
      context: crawler
    env_file:
      - crawler/.env.container
    depends_on:
      - postgres
      - redis
    networks:
      - crawler

  migrate-init:
    container_name: crawler-app-migrate-init
    build:
      context: migrate
    env_file:
      - migrate/.env.container
    command: ["/app/run", "init"]
    restart: "on-failure"
    depends_on:
      - postgres
    networks:
      - crawler

  migrate:
    container_name: crawler-app-migrate
    build:
      context: migrate
    env_file:
      - migrate/.env.container
    command: ["/app/run", "migrate"]
    restart: "on-failure"
    depends_on:
      - postgres
      - migrate-init
    networks:
      - crawler

  consumer:
    container_name: consumer-app
    build:
      context: consumer
    env_file:
      - consumer/.env.container
    depends_on:
      - migrate
      - crawler
    networks:
      - crawler

  api:
    container_name: crawler-api
    build:
      context: api
    env_file:
      - api/.env.container
    depends_on:
      - consumer
    ports:
      - "3000:3000"
    networks:
      - crawler

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    volumes:
      - ./configs/otelcol/config.yaml:/etc/otelcol/config.yaml
    ports:
      - 4317:4317 # GRPC
      - 4318:4318 # HTTP
    networks:
      - crawler

  tempo:
    image: grafana/tempo:main-3738ab8
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./configs/tempo/config.yaml:/etc/tempo.yaml
      - ./tempo:/tmp/tempo
    ports:
      - 3200:3200
    networks:
      - crawler

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - 3100:3000
    networks:
      - crawler

networks:
  crawler:
    driver: bridge